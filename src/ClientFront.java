/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author skeith
 */

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.*;
import java.sql.PreparedStatement;


public class ClientFront extends javax.swing.JFrame {

    /**
     * Creates new form ClientFront
     */
    
    Connection cnn;
    Statement stmt;
    ResultSet rs;
    static int indexClientClicked;
    
    public ClientFront() {
        initComponents();
        ConnClientData();
        setDefaultCloseOperation(ClientFront.EXIT_ON_CLOSE);
    }
    
    public void ConnClientData() {

            String  url = "jdbc:oracle:thin:@delphi.cs.csubak.edu:1521:dbs01",
                user="winter342", passwd="c3m4p2s";
        try {
                DriverManager.registerDriver(new oracle.jdbc.driver.OracleDriver());
                cnn = DriverManager.getConnection(url, user, passwd);
                cnn.setAutoCommit(true);
                

                    stmt = cnn.createStatement( ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_UPDATABLE );

                String sql = "select * from crak_client order by clientID asc";
                rs = stmt.executeQuery(sql);
                
                //rs.next();
                while(rs.next()) {

                String firstn = rs.getString("Fname");
                String lastn = rs.getString("Lname");
                int assN = rs.getInt("Ssn");
                String ASocial = Integer.toString(assN);
                String aBirth = rs.getString("Bdate");
                String AStreet = rs.getString("Street");
                String ACity = rs.getString("City"); 
                String AState = rs.getString("State"); 
                int att_zip = rs.getInt("ZIP");
                String AZip = Integer.toString(att_zip);
                int att_phone = rs.getInt("Phone");
                String APhone = Integer.toString(att_phone);
                String AEmail = rs.getString("Email");
                int att_billing = rs.getInt("Billing");
                String ASalary = Integer.toString(att_billing);

                
                DefaultTableModel model = (DefaultTableModel) ClientTable.getModel();
                model.addRow(new Object[]{firstn, lastn, ASocial, aBirth, AStreet, ACity, AState, AZip,
                APhone, AEmail, ASalary});
                }
                

        } catch (SQLException e ) { e.printStackTrace(); System.exit(-1); }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        ClientTable = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        GoAttorney = new javax.swing.JButton();
        GoCase = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        ClientAddButton = new javax.swing.JButton();
        UpdateClientButton = new javax.swing.JButton();
        ResetClient = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        ClientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "First Name", "Last Name", "SSN", "Birthday", "Street", "City", "State", "Zip", "Phone", "Email", "Billing"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, true, false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        ClientTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ClientTableMouseClicked(evt);
            }
        });
        ClientTable.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ClientTableKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClientTableKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(ClientTable);
        if (ClientTable.getColumnModel().getColumnCount() > 0) {
            ClientTable.getColumnModel().getColumn(0).setResizable(false);
            ClientTable.getColumnModel().getColumn(1).setResizable(false);
            ClientTable.getColumnModel().getColumn(2).setResizable(false);
            ClientTable.getColumnModel().getColumn(3).setResizable(false);
            ClientTable.getColumnModel().getColumn(4).setResizable(false);
            ClientTable.getColumnModel().getColumn(5).setResizable(false);
            ClientTable.getColumnModel().getColumn(6).setResizable(false);
            ClientTable.getColumnModel().getColumn(7).setResizable(false);
            ClientTable.getColumnModel().getColumn(8).setResizable(false);
            ClientTable.getColumnModel().getColumn(9).setResizable(false);
            ClientTable.getColumnModel().getColumn(10).setResizable(false);
        }

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        GoAttorney.setText("Attorney");
        GoAttorney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoAttorneyActionPerformed(evt);
            }
        });

        GoCase.setText("Case");
        GoCase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GoCaseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(GoAttorney)
                .addGap(18, 18, 18)
                .addComponent(GoCase)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(GoCase)
                    .addComponent(GoAttorney))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        ClientAddButton.setText("Add");
        ClientAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientAddButtonActionPerformed(evt);
            }
        });

        UpdateClientButton.setText("Update");
        UpdateClientButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateClientButtonActionPerformed(evt);
            }
        });

        ResetClient.setText("Reset");
        ResetClient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ResetClientActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(UpdateClientButton)
                    .addComponent(ResetClient)
                    .addComponent(ClientAddButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ClientAddButton)
                .addGap(18, 18, 18)
                .addComponent(UpdateClientButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                .addComponent(ResetClient)
                .addContainerGap())
        );

        jLabel1.setFont(new java.awt.Font("Ubuntu", 1, 36)); // NOI18N
        jLabel1.setText("Client");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 851, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel1)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 403, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ClientAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientAddButtonActionPerformed
        // TODO add your handling code here:
        new AddClient().setVisible(true);
    }//GEN-LAST:event_ClientAddButtonActionPerformed

    private void ClientTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ClientTableMouseClicked
        // TODO add your handling code here:
        indexClientClicked = ClientTable.getSelectedRow();
        indexClientClicked = indexClientClicked + 1;
    }//GEN-LAST:event_ClientTableMouseClicked

    private void ClientTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientTableKeyPressed
        // TODO add your handling code here:
        indexClientClicked = ClientTable.getSelectedRow();
        indexClientClicked = indexClientClicked + 1;
    }//GEN-LAST:event_ClientTableKeyPressed

    private void UpdateClientButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateClientButtonActionPerformed
        // TODO add your handling code here:
        if(indexClientClicked > 0)
            new UpdateClient().setVisible(true);
    }//GEN-LAST:event_UpdateClientButtonActionPerformed

    private void ClientTableKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientTableKeyReleased
        // TODO add your handling code here:
        indexClientClicked = ClientTable.getSelectedRow();
        indexClientClicked = indexClientClicked + 1;
    }//GEN-LAST:event_ClientTableKeyReleased

    private void GoAttorneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoAttorneyActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new LawFirmFront().setVisible(true);
    }//GEN-LAST:event_GoAttorneyActionPerformed

    private void GoCaseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GoCaseActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new CaseFront().setVisible(true);
    }//GEN-LAST:event_GoCaseActionPerformed

    private void ResetClientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ResetClientActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) ClientTable.getModel();
        model.setRowCount(0);
        ConnClientData();
    }//GEN-LAST:event_ResetClientActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ClientFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ClientFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ClientFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ClientFront.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ClientFront().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ClientAddButton;
    private javax.swing.JTable ClientTable;
    private javax.swing.JButton GoAttorney;
    private javax.swing.JButton GoCase;
    private javax.swing.JButton ResetClient;
    private javax.swing.JButton UpdateClientButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
